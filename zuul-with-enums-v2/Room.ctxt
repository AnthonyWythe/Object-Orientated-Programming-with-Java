#BlueJ class context
comment0.target=Room
comment0.text=\n\ The\ "Room"\ class\ represents\ one\ location\ of\ the\ map\ in\ the\ game.\n\ Each\ room\ has\ a\ short\ description,\ a\ full\ description\ and\ an\ ID\ number.\n\ An\ image\ can\ be\ added\ to\ each\ room\ as\ well.\n\ \n\ Each\ room\ is\ connected\ to\ other\ rooms\ via\ exits.\n\ For\ each\ existing\ exit,\ the\ room\ stores\ a\ reference\ to\ the\ neighboring\ room.\n\ Exits\ can\ be\ set\ as\ 'locked'\ or\ 'unlocked'.\n\n\ A\ room\ can\ hold\ a\ number\ of\ objects\ in\ the\ game;\ items,\ pillars,\ coins\ and\ a\ character.\n\ These\ are\ stored\ in\ ArrayLists\ (except\ for\ 'Character',\ there\ may\ only\ be\ one\ in\ a\ room).\n\ \n\ @author\ \ (Anthony\ Wythe)\n\ @version\ ('Escape'\ Version\ 5\ -\ 06/12/2018)\n
comment1.params=roomID\ description\ fullDescription
comment1.target=Room(int,\ java.lang.String,\ java.lang.String)
comment1.text=\n\ Create\ a\ room\ described\ by\ its\ "description".\ Initially,\ it\ has\n\ no\ exits.\ Also\ creates\ the\ full\ description,\ the\ ArrayLists\ and\ HashMaps.\n\ @param\ int\ roomID\:\ rooms\ ID\ numer\n\ @param\ String\ description\:\ short\ description\ of\ the\ room\ \n\ @param\ String\ fullDescription\:\ full\ description\ of\ the\ room\n
comment10.params=
comment10.target=java.lang.String\ getFullDescription()
comment10.text=\n\ Returns\ a\ full\ description\ of\ the\ room,\ including\ exits.\n\ @return\ String\n
comment11.params=itemName\ itemDescription\ itemID
comment11.target=void\ addItem(java.lang.String,\ java.lang.String,\ int)
comment11.text=\n\ Creates\ a\ new\ item\ and\ adds\ it\ to\ the\ ArrayList\ for\ the\ room.\n\ @param\ String\ itemName\ \:\ the\ items\ name\n\ @param\ String\ itemDescription\ \:\ the\ items\ details\n\ @return\ void\n
comment12.params=
comment12.target=Item\ getCurrentItem()
comment12.text=\n\ Returns\ the\ item\ in\ this\ room.\n\ @return\ Item\n
comment13.params=amount
comment13.target=void\ addCoins(int)
comment13.text=\n\ Adds\ coins\ to\ a\ room\ and\ stores\ in\ an\ ArrayList\ of\ coins.\n\ @param\ int\ amount\ \:\ the\ amount\ of\ coins\n\ @return\ void\n
comment14.params=
comment14.target=Coins\ getCurrentCoins()
comment14.text=\n\ Returns\ the\ coins\ in\ a\ room.\n\ @return\ Coins\n
comment15.params=name\ description\ IDNumber\ gold\ itemID
comment15.target=void\ addCharacter(java.lang.String,\ java.lang.String,\ int,\ int,\ int)
comment15.text=\n\ Adds\ a\ character\ object\ to\ the\ room.\n\ Main\ object\ for\ the\ trade\ interaction.\n\ @param\ String\ name\ \:\ the\ character\ name\n\ @param\ String\ description\ \:\ characters\ description\n\ @param\ int\ IDNumber\ \:\ character\ ID\ number\n\ @param\ int\ gold\ \:\ characters\ gold\ requirement\n\ @param\ int\ itemID\ \:\ characters\ item\ requirement\n\ @return\ void\n
comment16.params=
comment16.target=Character\ getCharacter()
comment16.text=\n\ Returns\ the\ rooms\ character.\n\ @return\ Character\n
comment17.params=face1\ face2\ face3\ face4\ face5\ correctFaceN
comment17.target=void\ setPillar(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment17.text=\n\ Sets\ a\ pillar\ object\ for\ the\ room.\n\ Requires\ 5\ String\ type\ 'faces'\ and\ an\ int\ for\ the\ correct\ number.\n\ Adds\ the\ pillar\ to\ the\ ArrayList.\n\ @param\ String\ face1,\ face2,\ face3,\ face4,\ face5\:\ the\ pillars\ faces\n\ @param\ int\ correctFaceN\:\ the\ correct\ face\ number\n\ @return\ void\n
comment18.params=
comment18.target=Pillar\ getPillar()
comment18.text=\n\ Returns\ a\ rooms\ pillar\ object\n\ @return\ Pillar\n
comment19.params=path\ description
comment19.target=javax.swing.ImageIcon\ createImageIcon(java.lang.String,\ java.lang.String)
comment19.text=\n\ Method\ that\ creates\ an\ image\ icon\ to\ add\ to\ the\ room.\n\ @param\ String\ path\ \:\ the\ image\ file\ location\n\ @param\ String\ description\ \:\ title\ for\ the\ image\ file\n\ @return\ ImageIcon\n
comment2.params=
comment2.target=int\ getRoomID()
comment2.text=\n\ Returns\ the\ rooms\ ID\ number.\n\ @return\ int\n
comment20.params=path\ description
comment20.target=void\ setRoomImage(java.lang.String,\ java.lang.String)
comment20.text=\n\ Method\ that\ triggers\ the\ creation\ of\ an\ image\ and\ adds\ it\ to\ the\ room.\n\ @param\ String\ path\ \:\ the\ image\ file\ location\n\ @param\ String\ description\ \:\ title\ for\ the\ image\ file\n\ @return\ void\n
comment21.params=
comment21.target=javax.swing.ImageIcon\ returnRoomImage()
comment21.text=\n\ Returns\ the\ rooms\ image.\n\ @return\ ImageIcon\n
comment3.params=direction\ neighbor
comment3.target=void\ setExit(java.lang.String,\ Room)
comment3.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ String\ direction\:\ the\ direction\ of\ the\ exit\n\ @param\ Room\ neighbor\:\ the\ room\ to\ which\ the\ exit\ leads\n\ @return\ void\n
comment4.params=
comment4.target=java.lang.String\ getExitString()
comment4.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example.\n\ "Exits\:\ north\ west"\n\ @return\ String\n
comment5.params=direction
comment5.target=Room\ getExit(java.lang.String)
comment5.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ String\ direction\ \:\ the\ exit's\ direction\n\ @return\ Room\n
comment6.params=direction\ locked
comment6.target=void\ setLock(java.lang.String,\ java.lang.String)
comment6.text=\n\ Set\ a\ lock\ on\ a\ rooms\ exit.\n\ @param\ String\ direction\:\ the\ direction\ of\ the\ exit\n\ @param\ String\ locked\:\ whether\ a\ room\ is\ locked\ or\ unlocked\n\ @return\ void\n
comment7.params=direction
comment7.target=java.lang.String\ getLock(java.lang.String)
comment7.text=\n\ Returns\ whether\ an\ exit\ is\ locked.\n\ @param\ String\ direction\:\ the\ direction\ to\ be\ checked\n\ @return\ String\n
comment8.params=newDescription
comment8.target=void\ setFullDescription(java.lang.String)
comment8.text=\n\ Method\ to\ change\ the\ rooms\ full\ description.\n\ @param\ String\ newDescription\:\ the\ new\ full\ description\ to\ be\ set\n\ @return\ void\n
comment9.params=
comment9.target=java.lang.String\ getLongDescription()
comment9.text=\n\ Returns\ a\ description\ of\ the\ current\ room.\n\ @return\ String\n
numComments=22
